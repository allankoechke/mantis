name: CMake Generate Release on multiple platforms

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc]
        include:
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1

      - name: Install dependencies on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libzstd-dev

      - name: Install Doxygen (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y doxygen graphviz

      - name: Install MinGW
        if: matrix.os == 'windows-latest'
        run: |
          choco install mingw --version=13.2.0 --no-progress

      - name: Add MinGW to PATH
        if: matrix.os == 'windows-latest'
        run: |
          echo "C:\ProgramData\mingw64\mingw64\bin" >> $GITHUB_PATH

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake (Windows)
        if: matrix.os == 'windows-latest'
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -G "MinGW Makefiles"
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Configure CMake (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER="C:\ProgramData\mingw64\mingw64\bin\g++.exe"
          -DCMAKE_C_COMPILER="C:\ProgramData\mingw64\mingw64\bin\gcc.exe"
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Check chosen compiler
        run: |
          gcc --version
          g++ --version

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-mantisapp
          path: ./artifacts

      - uses: actions/download-artifact@v4
        with:
          name: windows-latest-mantisapp
          path: ./artifacts

      - name: Show artifact contents
        run: ls -R ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-docs:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1

      - name: Configure CMake
        run: cmake -B build -S .

      - name: Build Doxygen Docs
        run: cmake --build build --target doc

      - name: Clone GitHub Wiki
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git clone https://x-access-token:${TOKEN}@github.com/${{ github.repository }}.wiki.git wiki

      - name: Copy docs to Wiki and push
        run: |
          find wiki -mindepth 1 -not -name '.git' -exec rm -rf {} +
          cp -r build/docs/html/* wiki/
          touch wiki/.nojekyll
          cd wiki
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Update Doxygen docs from CI"
            git push
          else
            echo "No changes to commit"
          fi